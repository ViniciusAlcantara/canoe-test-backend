version: "3"
services:
  app:
      build:
        args:
          user: user1
          uid: 1000
        context: ./
        dockerfile: Dockerfile
      image: canoe-test
      container_name: canoe-test-app
      restart: unless-stopped
      working_dir: /var/www/
      volumes:
        - ./:/var/www
      networks:
        - canoe-test

  db:
      image: mysql:latest
      container_name: canoe-test-db
      restart: unless-stopped
      environment:
        MYSQL_DATABASE: ${DB_DATABASE}
        MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        MYSQL_PASSWORD: ${DB_PASSWORD}
        MYSQL_USER: ${DB_USERNAME}
        SERVICE_TAGS: dev
        SERVICE_NAME: mysql
      volumes:
        - ./docker-compose/mysql:/docker-entrypoint-initdb.d
      networks:
        - canoe-test

  testing-db:
      image: mysql:latest
      container_name: testing-db
      restart: unless-stopped
      environment:
        MYSQL_DATABASE: ${TESTING_DB_DATABASE}
        MYSQL_ROOT_PASSWORD: ${TESTING_DB_PASSWORD}
        MYSQL_PASSWORD: ${TESTING_DB_PASSWORD}
        MYSQL_USER: ${TESTING_DB_USERNAME}
        SERVICE_TAGS: dev
        SERVICE_NAME: mysql
      volumes:
        - ./docker-compose/mysql:/docker-entrypoint-testinginitdb.d
      networks:
        - canoe-test

  nginx:
      image: nginx:latest
      container_name: canoe-test-nginx
      restart: unless-stopped
      ports:
        - 8000:80
      volumes:
        - ./:/var/www
        - ./docker-compose/nginx:/etc/nginx/conf.d
      networks:
        - canoe-test

  phpmyadmin:
   image: 'phpmyadmin:latest'
   links:
      - db
      - testing-db
   ports:
      - 8080:80
   networks:
      - canoe-test
   environment:
      - PMA_ARBITRARY=1


networks:
  canoe-test:
    driver: bridge